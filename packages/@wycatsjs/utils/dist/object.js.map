{"version":3,"sources":["../src/object.ts"],"names":[],"mappings":"AAGA,OAAO,SAAS,WACd,GAAM,EACN,EAA2D,EACvC;IACpB,OAAO,OAAO,WAAW,CACvB,OAAO,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GACnC,GAAG,OAAO,KAAK;AAGrB,CAAC","file":"object.js","sourcesContent":["type AnyRecord = Record<keyof any, any>;\ntype Value<R> = R[keyof R];\n\nexport function mapEntries<R extends Record<keyof any, any>, U>(\n  obj: R,\n  fn: (value: Value<R>, key: keyof R, obj: R) => [keyof R, U]\n): Record<keyof R, U> {\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) =>\n      fn(value, key, obj)\n    )\n  ) as Record<keyof R, U>;\n}\n"]}