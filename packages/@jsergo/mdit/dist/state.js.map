{"version":3,"sources":["../src/state.ts"],"names":[],"mappings":"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","file":"state.js","sourcesContent":["import MarkdownIt from \"markdown-it\";\nimport type Token from \"markdown-it/lib/token.js\";\nimport type { StateBlock, TypedBlockState } from \"./types.js\";\n\nexport class MDStateCreator<Env, WrapperEnv> {\n  readonly #md: MarkdownIt;\n  readonly #createEnv: (env: Env) => WrapperEnv;\n\n  constructor(\n    md: MarkdownIt,\n    createEnv: (env: Env) => WrapperEnv\n  ) {\n    this.#md = md;\n    this.#createEnv = createEnv;\n  }\n\n  create(state: TypedBlockState<Env>): MDState<WrapperEnv> {\n    return new MDState(\n      this.#md,\n      state,\n      this.#createEnv(state.env)\n    );\n  }\n}\n\nexport class MDState<Env = unknown> {\n  readonly #state: TypedBlockState<Env>;\n  readonly #md: MarkdownIt;\n  readonly #env: Env;\n\n  constructor(md: MarkdownIt, state: StateBlock, env: Env) {\n    this.#state = state;\n    this.#md = md;\n    this.#env = env;\n  }\n\n  line(lineno: number): LineState {\n    return new LineState(this.#state, lineno);\n  }\n\n  consumeLine(): void {\n    this.#state.line = this.#state.line + 1;\n  }\n\n  get highlight(): HighlightFn | null | undefined {\n    return this.#md.options.highlight;\n  }\n\n  get md(): MarkdownIt {\n    return this.#md;\n  }\n\n  get env(): Env {\n    return this.#env;\n  }\n\n  open() {\n    return this.#state.push(\"html_block\", \"\", 0);\n  }\n\n  renderHTML(content: string) {\n    return this.#md.render(content, this.#state.env);\n  }\n\n  parse(content: string) {\n    const tokens: Token[] = [];\n    this.#md.block.parse(content, this.#md, this.#env, tokens);\n    return tokens;\n    // return this.#md.parse(content, this.#state.env);\n  }\n\n  error(message: string) {\n    return `<div class=\"language-error ext-error\"><pre class=\"ext-error\"><code>${message}</code></pre></div>`;\n  }\n}\n\nexport type HighlightFn = (\n  str: string,\n  lang: string,\n  attrs: string\n) => string;\n\nexport class LineState {\n  #state: StateBlock;\n  #startLine: number;\n\n  constructor(state: StateBlock, startLine: number) {\n    this.#state = state;\n    this.#startLine = startLine;\n  }\n\n  get state(): StateBlock {\n    return this.#state;\n  }\n\n  get next(): LineState | undefined {\n    if (this.#startLine < this.#state.lineMax) {\n      return new LineState(this.#state, this.#startLine + 1);\n    } else {\n      return undefined;\n    }\n  }\n\n  get position(): { pos: number; max: number } {\n    return {\n      pos: this.contentStart,\n      max: this.end,\n    };\n  }\n\n  get #src(): string {\n    return this.#state.src;\n  }\n\n  get rest() {\n    return this.#state.src.slice(this.start);\n  }\n\n  consume(): LineState {\n    this.#state.line = this.#startLine + 1;\n    return new LineState(this.#state, this.#startLine + 1);\n  }\n\n  until(predicate: (line: LineState) => boolean): string {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let line: LineState | undefined = this;\n    const lines = [];\n\n    while (line) {\n      const next: LineState | undefined = line.next;\n\n      if (!next) {\n        this.#state.line = line.#startLine + 1;\n        break;\n      }\n\n      lines.push(line.string({ ws: true }));\n      line = next;\n\n      if (predicate(next)) {\n        this.#state.line = next.#startLine + 1;\n        break;\n      }\n    }\n\n    return lines.join(\"\\n\");\n  }\n\n  string({ ws = false }: { ws?: boolean } = {}): string {\n    return this.#src.slice(\n      ws ? this.start : this.contentStart,\n      this.end\n    );\n  }\n\n  startsWith(chars: string): boolean {\n    return this.slice(chars.length) === chars;\n  }\n\n  matchStart(\n    regex: RegExp\n  ):\n    | { type: \"unmatched\" }\n    | { type: \"match\"; raw: RegExpExecArray; fragment: string }\n    | { type: \"error\"; error: string } {\n    if (!regex.source.startsWith(\"^\")) {\n      return {\n        type: \"error\",\n        error: `invalid pattern for matchStart (${regex}). matchStart patterns must be anchored`,\n      };\n    }\n\n    const match = regex.exec(this.rest);\n\n    if (!match) {\n      return { type: \"unmatched\" };\n    } else {\n      return {\n        type: \"match\",\n        raw: match,\n        fragment: match[0],\n      };\n    }\n  }\n\n  slice(\n    n: number = this.end - this.contentStart\n  ): string | undefined {\n    if (n > this.end - this.contentStart) {\n      return undefined;\n    }\n\n    const pos = this.contentStart;\n    let chars = \"\";\n\n    for (let i = 0; i < n; ++i) {\n      chars += this.#src.charAt(pos + i);\n    }\n\n    return chars;\n  }\n\n  /**\n   * The total indent of the line, including the required indent.\n   */\n  get #totalIndent(): number {\n    return this.#state.sCount[this.#startLine] ?? 0;\n  }\n\n  /**\n   * The required indent of the line.\n   */\n  get #requiredIndent(): number {\n    return this.#state.blkIndent;\n  }\n\n  /**\n   * The indent of the line, excluding the required indent.\n   */\n  get indent(): number {\n    return this.#totalIndent - this.#requiredIndent;\n  }\n\n  /**\n   * if it's indented more than 3 spaces, it's a code block\n   */\n  get isCodeBlock(): boolean {\n    return this.indent >= 4;\n  }\n\n  get start(): number {\n    return this.#state.bMarks[this.#startLine] ?? 0;\n  }\n\n  get wsChars(): number {\n    return this.#state.tShift[this.#startLine] ?? 0;\n  }\n\n  get contentStart(): number {\n    return this.start + this.wsChars;\n  }\n\n  get end(): number {\n    return this.#state.eMarks[this.#startLine] ?? 0;\n  }\n}\n\nexport function position(\n  state: StateBlock,\n  startLine: number\n): { pos: number; max: number } {\n  const pos =\n    (state.bMarks[startLine] ?? 0) +\n    (state.tShift[startLine] ?? 0);\n  const max = state.eMarks[startLine] ?? 0;\n\n  return { pos, max };\n}\n"]}