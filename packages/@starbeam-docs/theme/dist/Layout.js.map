{"version":3,"sources":["../src/Layout.tsx"],"names":[],"mappings":";AAAA,OAAO,kBAAkB,kBAAkB;AAC3C,SAAS,eAAe,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,QAAQ,MAAM;AAC7D,SAAS,OAAO,QAAQ,0BAA0B;AAClD,SAAS,OAAO,EAAE,EAAE,EAAE,EAAE,QAAQ,kBAAkB;AAElD,MAAM,EAAE,OAAM,EAAE,GAAG;AAEnB,eAAe,gBAAgB;IAC7B,SAAQ;QACN;QAEA,OAAO,iBAAO;yBAAa;;IAC7B;AACF,GAAG;AAEH,SAAS,QAAQ;IACf,UAAU,IAAM;QACd,SAAS,IAAI,CAAC,YAAY,CAAC,aAAa,QAAQ,IAAI;IACtD;IAEA,MAAM,YAAY,IAAI,KAAK;IAE3B,UAAU,IAAM;QACd,IAAI;QAEJ,MAAM,YAAY,SAAS,aAAa,CACtC;QAGF,IAAI,WAAW;YACb,MAAM,QAAQ,SAAS,aAAa,CAAC;YACrC,MAAM,KAAK,GAAG;YAEd,MAAM,SAAS,CAAC,GAAG,CAAC;YACpB,QAAQ,SAAS,aAAa,CAAC;YAE/B,MAAM,OAAO,GAAG,CAAC,IAAM;gBACrB,UAAU,KAAK,GAAG,MAAM,OAAO;YACjC;YAEA,MAAM,IAAI,GAAG;YACb,MAAM,MAAM,CAAC;YAEb,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,SAAS,CAAC,GAAG,CAAC;YACrB,MAAM,MAAM,CAAC;YAEb,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,SAAS,CAAC,GAAG,CAAC;YACrB,MAAM,MAAM,CAAC;YAEb,UAAU,WAAW,CAAC;YAEtB,SAAS,SAAS;gBAChB,MAAM,SAAS,CAAC,MAAM,CAAC,SAAS,UAAU,KAAK;gBAC/C,QAAQ,IAAI,GAAG,UAAU,KAAK,GAAG,OAAO,IAAI;YAC9C;YAEA,MAAM,WAAW;YACjB;QACF,CAAC;QAED,MACE,IAAM,QAAQ,IAAI,EAClB,CAAC,OAAS;YACR,IAAI,OAAO,WAAW,QAAQ,KAAK,WACjC,SAAS,IAAI,CAAC,YAAY,CAAC,aAAa;YAC1C,MAAM,OAAO,GAAG,SAAS;QAC3B;IAEJ;AACF","file":"Layout.js","sourcesContent":["import DefaultTheme from \"vitepress/theme\";\nimport { defineComponent, onMounted, ref, watch } from \"vue\";\nimport { STORAGE } from \"@starbeam-docs/snippets\";\nimport { checked, js, ts } from \"./Layout.css.js\";\n\nconst { Layout } = DefaultTheme;\n\nexport default defineComponent({\n  setup() {\n    setup();\n\n    return () => <Layout class=\"app\" />;\n  },\n});\n\nfunction setup() {\n  onMounted(() => {\n    document.body.setAttribute(\"data-lang\", STORAGE.lang);\n  });\n\n  const isChecked = ref(false);\n\n  onMounted(() => {\n    let input: HTMLInputElement;\n\n    const tsElement = document.querySelector(\n      \"#app :is(.social-links, .social-links-list) a[href*=typescript]\"\n    );\n\n    if (tsElement) {\n      const label = document.createElement(\"label\");\n      label.title = \"Show TypeScript code and examples\";\n\n      label.classList.add(\"switch-lang\");\n      input = document.createElement(\"input\");\n\n      input.oninput = (e) => {\n        isChecked.value = input.checked;\n      };\n\n      input.type = \"checkbox\";\n      label.append(input);\n\n      const tsSpan = document.createElement(\"span\");\n      tsSpan.classList.add(ts);\n      label.append(tsSpan);\n\n      const jsSpan = document.createElement(\"span\");\n      jsSpan.classList.add(js);\n      label.append(jsSpan);\n\n      tsElement.replaceWith(label);\n\n      function toggle() {\n        label.classList.toggle(checked, isChecked.value);\n        STORAGE.lang = isChecked.value ? \"ts\" : \"js\";\n      }\n\n      watch(isChecked, toggle);\n      toggle();\n    }\n\n    watch(\n      () => STORAGE.lang,\n      (lang) => {\n        if (typeof globalThis.document !== undefined)\n          document.body.setAttribute(\"data-lang\", lang);\n        input.checked = lang === \"ts\";\n      }\n    );\n  });\n}\n"]}