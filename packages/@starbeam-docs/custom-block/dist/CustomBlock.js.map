{"version":3,"sources":["../src/CustomBlock.tsx"],"names":[],"mappings":";AAAA,SACE,eAAe,QAIV,MAAM;AACb,SAAS,WAAW,QAAQ,uBAAuB;AAWnD,MAAM,QAAQ;AACd,MAAM,QAAQ;AACd,MAAM,OAAO;AACb,MAAM,OAAO;AAQb,MAAM,UAAU;IACd,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAEA,SAAS,cAAc,QAAwB,EAAiB;IAC9D,MAAM,UAAyB,EAAE;IAEjC,KAAK,MAAM,CAAC,OAAO,UAAU,IAAI,OAAO,OAAO,CAAC,SAAU;QACxD,IAAI,SAAS,QAAQ,CAAC,QAAQ;YAC5B,QAAQ,IAAI,CAAC;QACf,CAAC;IACH;IAEA,OAAO;AACT;AAIA,SAAS,KACP,IAAiB,EACjB,OAAwB,EACf;IACT,IAAI,WAAW,aAAa,SAAS;QACnC,OAAO;YACL;YACA,SAAS,SAAS;QACpB;IACF,OAAO;QACL,OAAO;YACL;QACF;IACF,CAAC;AACH;AAEA,eAAe,gBAAgB;IAC7B,OAAO;QACL,MAAM,KAAK;QACX,QAAQ,KAAqB;QAC7B,OAAO,KAAK;QACZ,OAAO,KAA0C;IACnD;IACA,OAAO,CAAC,OAAO,EAAE,MAAK,EAAE,GAAK;QAC3B,OAAO;yBAEI;oBACL;oBACA,CAAC,mBAAmB,EAAE,MAAM,KAAK,CAAC,CAAC;uBAChC,iBAAiB,MAAM,IAAI;uBAC3B,cAAc,MAAM,MAAM,IAAK;iBACnC;yBACM,MAAM,KAAK,IAAI,CAAC;;gBAEtB,KAAK,CAAC,UAAU;;IAGvB;AACF,GAAG;AAEH,SAAS,iBAAiB,IAAwB,EAAY;IAC5D,IAAI,SAAS,WAAW;QACtB,OAAO;YAAC;YAAoB;SAAU;IACxC,OAAO,IAAI,MAAM;QACf,OAAO;YAAC;YAAiB;YAAiB;SAAK;IACjD,OAAO;QACL,OAAO;YAAC;YAAiB;SAAgB;IAC3C,CAAC;AACH","file":"CustomBlock.js","sourcesContent":["import {\n  defineComponent,\n  type Prop,\n  type PropType,\n  type StyleValue,\n} from \"vue\";\nimport { customBlock } from \"./CustomBlock.css.js\";\n\nexport interface Props {\n  readonly color?: string;\n  readonly border?: Border;\n}\n\ntype BorderPosition =\n  | `${\"n\" | \"s\" | \"ns\" | \"\"}${\"e\" | \"w\" | \"ew\" | \"\"}`\n  | \"-\";\n\nconst north = \"north\";\nconst south = \"south\";\nconst east = \"east\";\nconst west = \"west\";\n\ntype BorderClass =\n  | typeof north\n  | typeof south\n  | typeof east\n  | typeof west;\n\nconst MAPPING = {\n  n: north,\n  s: south,\n  e: east,\n  w: west,\n} as const;\n\nfunction computeBorder(position: BorderPosition): BorderClass[] {\n  const classes: BorderClass[] = [];\n\n  for (const [input, className] of Object.entries(MAPPING)) {\n    if (position.includes(input)) {\n      classes.push(className);\n    }\n  }\n\n  return classes;\n}\n\ntype Border = `${BorderPosition}`;\n\nfunction prop<U extends T, T = U>(\n  type: PropType<T>,\n  options?: { default: U }\n): Prop<U> {\n  if (options && \"default\" in options) {\n    return {\n      type,\n      default: options?.default,\n    } as Prop<U>;\n  } else {\n    return {\n      type,\n    } as Prop<U>;\n  }\n}\n\nexport default defineComponent({\n  props: {\n    kind: prop(String),\n    border: prop<Border, string>(String),\n    color: prop(String),\n    style: prop<Extract<StyleValue, object>, object>(Object),\n  },\n  setup: (props, { slots }) => {\n    return () => (\n      <div\n        class={[\n          customBlock,\n          `sbdoc-custom-block-${props.color}`,\n          ...computeKindClass(props.kind),\n          ...computeBorder(props.border ?? (\"nsew\" as Border)),\n        ]}\n        style={props.style ?? {}}\n      >\n        {slots[\"default\"]?.()}\n      </div>\n    );\n  },\n});\n\nfunction computeKindClass(kind: string | undefined): string[] {\n  if (kind === \"details\") {\n    return [\"display-contents\", \"details\"];\n  } else if (kind) {\n    return [\"content-block\", \"callout-block\", kind];\n  } else {\n    return [\"content-block\", \"callout-block\"];\n  }\n}\n"]}