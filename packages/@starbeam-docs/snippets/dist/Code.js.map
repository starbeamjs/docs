{"version":3,"sources":["../src/Code.ts"],"names":[],"mappings":"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","file":"Code.js","sourcesContent":["import { defineComponent, h, type Ref, type Slots } from \"vue\";\nimport { onMounted, ref } from \"vue\";\nimport { STORAGE } from \"./lang.js\";\nimport { codeSnippet } from \"./Code.css.js\";\n\nconst ID = \"KVEWS96Xs\";\n\nexport default defineComponent<{}>({\n  setup(_, { slots }) {\n    const js = ref();\n    const ts = ref();\n\n    const container = ref();\n\n    function current() {\n      return `${STORAGE.currentLang} lang-switcher`;\n    }\n    onMounted(() => {\n      mountElements(ts, js, container);\n    });\n\n    return h(\n      \"section\",\n      {\n        class: [\n          STORAGE.currentLang,\n          \"section\",\n          \"code-snippet\",\n          codeSnippet,\n        ],\n        ref: container,\n      },\n      [toggler(), ...langSlots(slots, { ts, js })]\n    );\n  },\n});\n\nfunction toggler() {\n  return h(\"p\", a({ class: \"toggler\" }), [\n    langButton(\"js\"),\n    langButton(\"ts\"),\n  ]);\n}\n\nfunction langSlots(\n  slots: Slots,\n  refs: { ts: Ref<HTMLElement>; js: Ref<HTMLElement> }\n) {\n  return [\n    langSlot(slots, \"ts\", refs.ts),\n    langSlot(slots, \"js\", refs.js),\n  ];\n}\n\nfunction langSlot(\n  slots: Slots,\n  lang: \"ts\" | \"js\",\n  ref: Ref<HTMLElement>\n): ReturnType<typeof h> | void {\n  const slot = slots[lang];\n\n  if (slot) {\n    return h(\"div\", a({ class: lang, ref }), [slot()]);\n  }\n}\n\nfunction langButton(lang: \"ts\" | \"js\") {\n  return h(\n    \"button\",\n    a({\n      type: \"button\",\n      class: [\"toggler-button\", lang],\n      onClick: () => {\n        STORAGE.lang = \"ts\";\n      },\n    }),\n    [lang]\n  );\n}\n\nfunction a<O>(attrs: O): O & { \"data-id\": typeof ID } {\n  return {\n    ...attrs,\n    \"data-id\": ID,\n  };\n}\n\nfunction createToggler(): HTMLElement {\n  const toggler = document.createElement(\"p\");\n  toggler.className = \"toggler\";\n  return toggler;\n}\n\nfunction label(text: string) {\n  const label = document.createElement(\"span\");\n  label.innerText = text;\n  return label;\n}\n\nfunction button(text: string, callback: () => void) {\n  const button = document.createElement(\"button\");\n  button.setAttribute(\"type\", \"button\");\n  button.className = \"toggler-button3\";\n  button.innerText = text;\n  button.addEventListener(\"click\", callback);\n\n  return button;\n}\n\nconst LANG_KEY = \"default-lang\";\nconst DEFAULT_LANG = \"js\";\n\nfunction addToggle(\n  container: Element,\n  text: string,\n  callback: () => void\n) {\n  const toggler = createToggler();\n\n  if (text === \"typescript\") {\n    toggler.appendChild(label(\"ts\"));\n    toggler.appendChild(button(\"js\", callback));\n  } else {\n    toggler.appendChild(button(\"ts\", callback));\n    toggler.appendChild(label(\"js\"));\n  }\n\n  container.prepend(toggler);\n}\n\nfunction mountElements(\n  ts: Ref<HTMLElement>,\n  js: Ref<HTMLElement>,\n  container: Ref<HTMLElement>\n) {\n  onMounted(() => {\n    const tsSection = ts.value;\n    const jsSection = js.value;\n\n    const tsContainer = tsSection.querySelector(\n      \"div[class^=language-]\"\n    );\n\n    assert(tsContainer, exists);\n\n    addToggle(tsContainer, \"typescript\", () => {\n      STORAGE.lang = \"js\";\n    });\n\n    const jsContainer = jsSection.querySelector(\n      \"div[class^=language-]\"\n    );\n\n    assert(jsContainer, exists);\n\n    addToggle(jsContainer, \"javascript\", () => {\n      STORAGE.lang = \"ts\";\n    });\n  });\n\n  // TODO: Generate the right markdown\n  onMounted(() => {\n    for (const item of container.value.querySelectorAll(\n      \"code[class^=language-]\"\n    )) {\n      assert(item.parentElement, exists);\n      item.parentElement.classList.add(\"code-container\");\n\n      for (const child of item.querySelectorAll(\n        \".code-container\"\n      ) as NodeListOf<Element>) {\n        child.classList.remove(\"code-container\");\n      }\n    }\n    // const element =\n  });\n}\n\nfunction assert<T, U extends T>(\n  value: T,\n  check: (value: T) => value is U\n): asserts value is U {\n  if (!check(value)) {\n    throw new Error(`Expected ${check.name}`);\n  }\n}\n\nfunction exists<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== undefined;\n}\n"]}